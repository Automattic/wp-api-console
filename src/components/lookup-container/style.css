.lookup-container {
	position: relative;
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: flex-start;
	align-items: center;
	flex-grow: 1;
	flex-shrink: 1;
	align-self: auto;
	padding: 8px 8px 6px;
	background: white;
}

.lookup-container .right-icon {
	padding: 0;
	width: 24px;
	text-align: right;
	cursor: pointer;
	background: none;
	position: relative;
	flex-grow: 0;
	flex-shrink: 0;
	align-self: auto;
}

.lookup-container .right-icon a {
	position: absolute;
	top: 50%;
	left: 50%;
	-moz-transform: translate(-50%,-50%);
	-webkit-transform: translate(-50%,-50%);
	transform: translate(-50%,-50%);
	display: inline-block;
	vertical-align: -2px;
	content: '';
	color: #FFF;
	border-radius: 100%;
	width: 24px;
	height: 24px;
	opacity: 1;
	overflow: hidden;
	background: url(res/search-dark-@2x.png) no-repeat center center transparent;
	background-size: 16px 16px;
	cursor: default;
}

.lookup-container .url-input {
	width: 100%;
	border: none;
	background: none;
	color: #7290a1;
	font-size: 16px;
	height: 26px;
	line-height: 26px;
	outline: none;
	margin: 0;
	padding: 0 10px;
	font-family: Inconsolata, monospace;
}

.lookup-container .url-input p {
	margin: 0;
}

.lookup-container .url-input .parameter {
	background: hsl(205,38%,94%);
	color: hsl(202,68%,35%);
	padding: 0 4px;
	margin: 0 3px;
	border-radius: 2px;
	display: inline-block;
	line-height: 22px;
	height: 22px;
	font-family: Inconsolata, monospace;
}

/* It's possible to get TinyMCE to leave empty inline elements around.  Try
 * selecting the entire contents of an inline element and pressing Space for
 * example (may need to do it twice in a row).  Without this rule, this breaks
 * the display pretty badly due to the rules above, and further breakage can
 * result because you can still navigate inside the empty element.
 */
.lookup-container .url-input .parameter:empty {
	display: none;
}

.lookup-container .url-input .parameter[data-mce-selected] {
	background: hsl(205,38%,88%);
}
